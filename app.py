from flask import Flask, request, jsonify
import logging
from extract import main, get_prediction_from_url

app = Flask(__name__)

logging.basicConfig(level=logging.DEBUG)

@app.route('/api/predict', methods=['POST'])
def predict():
    try:
        if not request.is_json:
            logging.error("Request data is not in JSON format.")
            return jsonify({'error': 'Request data must be JSON'}), 400

        data = request.json
        url = data.get('url')
        if not url:
            logging.error("No URL provided in request data.")
            return jsonify({'error': 'No URL provided'}), 400

        logging.info(f"Received URL for prediction: {url}")

        result = get_prediction_from_url(url)
        logging.info(f"Prediction result: {result}")
        return jsonify({'result': result})
    except Exception as e:
        logging.exception("Error occurred during prediction.")
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(port=7000)
    
# These codes where gotten from philomathic, source -- https://github.com/philomathic-guy/Malicious-Web-Content-Detection-Using-Machine-Learning/blob/master/features_extraction.py
